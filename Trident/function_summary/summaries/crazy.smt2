(set-logic QF_ABV)
(declare-fun rreturn () (_ BitVec 32))
(declare-fun lhole_value_arg1_a_DONE () (_ BitVec 32))
(declare-fun value_arg1_a_DONE () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun value_arg1_a () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun value_arg2_b () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun rhole_value_arg2_b () (_ BitVec 32))
(declare-fun rhole_value_arg1_a () (_ BitVec 32))
(assert (let ((.def_0 (= rreturn #b00000000000000000000000000000000))) (let ((.def_1 (select value_arg2_b #b00000000000000000000000000000000))) (let ((.def_2 (select value_arg2_b #b00000000000000000000000000000001))) (let ((.def_3 (select value_arg2_b #b00000000000000000000000000000010))) (let ((.def_4 (select value_arg2_b #b00000000000000000000000000000011))) (let ((.def_5 (concat .def_4 .def_3))) (let ((.def_6 (concat .def_5 .def_2))) (let ((.def_7 (concat .def_6 .def_1))) (let ((.def_8 (= rhole_value_arg2_b .def_7))) (let ((.def_9 (select value_arg1_a #b00000000000000000000000000000000))) (let ((.def_10 (select value_arg1_a #b00000000000000000000000000000001))) (let ((.def_11 (select value_arg1_a #b00000000000000000000000000000010))) (let ((.def_12 (select value_arg1_a #b00000000000000000000000000000011))) (let ((.def_13 (concat .def_12 .def_11))) (let ((.def_14 (concat .def_13 .def_10))) (let ((.def_15 (concat .def_14 .def_9))) (let ((.def_16 (= rhole_value_arg1_a .def_15))) (let ((.def_17 (select value_arg1_a_DONE #b00000000000000000000000000000000))) (let ((.def_18 (select value_arg1_a_DONE #b00000000000000000000000000000001))) (let ((.def_19 (concat .def_18 .def_17))) (let ((.def_20 (select value_arg1_a_DONE #b00000000000000000000000000000010))) (let ((.def_21 (concat .def_20 .def_19))) (let ((.def_22 (select value_arg1_a_DONE #b00000000000000000000000000000011))) (let ((.def_23 (concat .def_22 .def_21))) (let ((.def_24 (concat .def_2 .def_1))) (let ((.def_25 (concat .def_3 .def_24))) (let ((.def_26 (concat .def_4 .def_25))) (let ((.def_27 (concat .def_10 .def_9))) (let ((.def_28 (concat .def_11 .def_27))) (let ((.def_29 (concat .def_12 .def_28))) (let ((.def_30 (bvadd .def_29 .def_26))) (let ((.def_31 (= .def_30 .def_23))) (let ((.def_32 (bvslt #b00000000000000000000000000001010 .def_26))) (let ((.def_33 (and .def_32 .def_31))) (let ((.def_34 (bvsub .def_29 .def_26))) (let ((.def_35 (= .def_34 .def_23))) (let ((.def_36 (not .def_32))) (let ((.def_37 (and .def_36 .def_35))) (let ((.def_38 (or .def_37 .def_33))) (let ((.def_39 (concat .def_22 .def_20))) (let ((.def_40 (concat .def_39 .def_18))) (let ((.def_41 (concat .def_40 .def_17))) (let ((.def_42 (= lhole_value_arg1_a_DONE .def_41))) (let ((.def_43 (and .def_42 .def_38 .def_16 .def_8))) (let ((.def_44 (and .def_43 .def_0))) .def_44))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
