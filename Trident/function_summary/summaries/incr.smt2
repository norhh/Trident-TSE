(set-logic QF_ABV)
(declare-fun lhole_value_arg1_a_DONE () (_ BitVec 32))
(declare-fun value_arg1_a () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun value_arg1_a_DONE () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun rhole_value_arg1_a () (_ BitVec 32))
(declare-fun rreturn () (_ BitVec 32))
(assert (let ((.def_0 (= rreturn #b00000000000000000000000000000000))) (let ((.def_1 (select value_arg1_a #b00000000000000000000000000000000))) (let ((.def_2 (select value_arg1_a #b00000000000000000000000000000001))) (let ((.def_3 (select value_arg1_a #b00000000000000000000000000000010))) (let ((.def_4 (select value_arg1_a #b00000000000000000000000000000011))) (let ((.def_5 (concat .def_4 .def_3))) (let ((.def_6 (concat .def_5 .def_2))) (let ((.def_7 (concat .def_6 .def_1))) (let ((.def_8 (= rhole_value_arg1_a .def_7))) (let ((.def_9 (select value_arg1_a_DONE #b00000000000000000000000000000000))) (let ((.def_10 (select value_arg1_a_DONE #b00000000000000000000000000000001))) (let ((.def_11 (select value_arg1_a_DONE #b00000000000000000000000000000010))) (let ((.def_12 (select value_arg1_a_DONE #b00000000000000000000000000000011))) (let ((.def_13 (concat .def_12 .def_11))) (let ((.def_14 (concat .def_13 .def_10))) (let ((.def_15 (concat .def_14 .def_9))) (let ((.def_16 (= lhole_value_arg1_a_DONE .def_15))) (let ((.def_17 (concat .def_10 .def_9))) (let ((.def_18 (concat .def_11 .def_17))) (let ((.def_19 (concat .def_12 .def_18))) (let ((.def_20 (concat .def_2 .def_1))) (let ((.def_21 (concat .def_3 .def_20))) (let ((.def_22 (concat .def_4 .def_21))) (let ((.def_23 (bvadd #b00000000000000000000000000000001 .def_22))) (let ((.def_24 (= .def_23 .def_19))) (let ((.def_25 (and .def_24 .def_16 .def_8))) (let ((.def_26 (and .def_25 .def_0))) .def_26))))))))))))))))))))))))))))
(check-sat)
